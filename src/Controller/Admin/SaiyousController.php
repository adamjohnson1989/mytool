<?php
namespace App\Controller\Admin;

use App\Controller\Admin\AdminController;
use Cake\Event\Event;
use Cake\ORM\Query;
/**
 * Saiyous Controller
 *
 *
 * @method \App\Model\Entity\Saiyous[]|\Cake\Datasource\ResultSetInterface paginate($object = null, array $settings = [])
 */
class SaiyousController extends AdminController
{
    public function beforeRender(Event $event)
    {
        parent::beforeRender($event); // TODO: Change the autogenerated stub
        $this->viewBuilder()->layout('admin');
    }
    /**
     * Index method
     *
     * @return \Cake\Http\Response|void
     */
    public function index()
    {
        $saiyous = $this->paginate($this->Saiyous);

        $this->set(compact('saiyous'));
    }

    /**
     * View method
     *
     * @param string|null $id Saiyous id.
     * @return \Cake\Http\Response|void
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function view($id = null)
    {
        $saiyous = $this->Saiyous->get($id, [
            'contain' => []
        ]);

        $this->set('saiyous', $saiyous);
    }

    /**
     * Add method
     *
     * @return \Cake\Http\Response|null Redirects on successful add, renders view otherwise.
     */
    public function add()
    {

        $catObj = $this->loadModel('Recruitments');
        $catQuery = $catObj->find()->select([
            'Recruitments.id',
            'Recruitments.name',
        ])->where(['status' => 0]);

        $catArr = $catQuery->toArray();
        if ($this->request->is('post')) {
            $dataArr = $this->request->getData();
            if(count($dataArr['members'])){
                $status = true;
                foreach($dataArr['members'] as $memId){
                    $saiyous = $this->Saiyous->newEntity();
                    $saiyous = $this->Saiyous->patchEntity($saiyous, ['recruitments_id' => $dataArr['recruitments_id'], 'members_id' => $memId]);
                    if (!$this->Saiyous->save($saiyous)) {
                        $status = false;
                    }
                }
                if ($status) {
                    $this->Flash->success(sprintf("<div class='alert alert-success'>%s</div>",  h("Đơn Hàng Mới Đã Được Tạo!")), ['escape' => false]);
                    return $this->redirect(['action' => 'index']);
                }else{
                    $this->Flash->error(sprintf("<div class='alert alert-danger'>%s</div>",  h('Lỗi Tạo Đơn Hàng, Kiểm Tra Lại Thông Tin')), ['escape' => false]);
                }
            }
        }
        $saiyous = $this->Saiyous->newEntity();
        $this->set(compact('saiyous'));

        $this->set('catData',$catArr);
    }

    /**
     * Edit method
     *
     * @param string|null $id Saiyous id.
     * @return \Cake\Http\Response|null Redirects on successful edit, renders view otherwise.
     * @throws \Cake\Network\Exception\NotFoundException When record not found.
     */
    public function edit($id = null)
    {
        $saiyous = $this->Saiyous->get($id, [
            'contain' => []
        ]);
        if ($this->request->is(['patch', 'post', 'put'])) {
            $saiyous = $this->Saiyous->patchEntity($saiyous, $this->request->getData());
            if ($this->Saiyous->save($saiyous)) {
                $this->Flash->success(__('The saiyous has been saved.'));

                return $this->redirect(['action' => 'index']);
            }
            $this->Flash->error(__('The saiyous could not be saved. Please, try again.'));
        }
        $this->set(compact('saiyous'));
    }

    /**
     * Delete method
     *
     * @param string|null $id Saiyous id.
     * @return \Cake\Http\Response|null Redirects to index.
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function delete($id = null)
    {
        $this->request->allowMethod(['post', 'delete']);
        $saiyous = $this->Saiyous->get($id);
        if ($this->Saiyous->delete($saiyous)) {
            $this->Flash->success(__('The saiyous has been deleted.'));
        } else {
            $this->Flash->error(__('The saiyous could not be deleted. Please, try again.'));
        }

        return $this->redirect(['action' => 'index']);
    }

    public function searchMember(){
        $q = $this->request->query('q');
        $reAry = array();
        if ($this->request->is('ajax')) {
            $memObj = $this->loadModel('Members');
            $like = '%'.$q.'%';
            $memQuery = $memObj->find()->select([
                'Members.id', 'Members.name','Members.my_number','Members.birthday','Members.kokyo','Members.image'
            ])->where(['Members.name LIKE' => $like, 'Members.status' => 0]);

            if(count($memQuery)){
                $reAry['total_count'] = count($memQuery);
                foreach($memQuery as $m){
                    $item['id'] = $m->id;
                    $item['name'] = $m->name;
                    $item['my_number'] = $m->my_number;
                    $item['birthday'] = $m->birthday;
                    $item['kokyo'] = $m->kokyo;
                    $item['image'] = $m->image;
                    $reAry['items'][] = $item;
                }
            }
            echo json_encode($reAry);
            die;
        }
    }
}
