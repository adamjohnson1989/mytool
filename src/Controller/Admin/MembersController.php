<?php
namespace App\Controller\Admin;

use App\Controller\Admin\AdminController;
use Cake\Event\Event;
use PhpOffice\PhpWord\PhpWord;
use PhpOffice\PhpWord\Shared\Converter;
use PhpOffice\PhpWord\Style\TablePosition;
use PhpOffice\PhpWord\Style\Image;
use PhpOffice\PhpWord\Style\Table;
use \PhpOffice\PhpWord\Shared\Html;
//require_once (ROOT . DS . 'vendor' . DS . 'mpdf' . DS .  'mpdf.php');
//use mPDF;

/**
 * Members Controller
 *
 * @property \App\Model\Table\MembersTable $Members
 *
 * @method \App\Model\Entity\Member[] paginate($object = null, array $settings = [])
 */
class MembersController extends AdminController
{
    public function beforeRender(Event $event)
    {
        parent::beforeRender($event); // TODO: Change the autogenerated stub
        $this->viewBuilder()->layout('member');
    }
    /**
     * Index method
     *
     * @return \Cake\Http\Response|void
     */
    public function index()
    {
        $this->paginate = [
            'contain' => ['Companys']
        ];
        $members = $this->paginate($this->Members);

        $this->set(compact('members'));
        $this->set('_serialize', ['members']);
    }

    /**
     * View method
     *
     * @param string|null $id Member id.
     * @return \Cake\Http\Response|void
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function view($id = null)
    {
        $member = $this->Members->get($id, [
            'contain' => ['Companys']
        ]);
        switch ($member->kekkon) {
            case 1:
                $member->kekkon = KEKKON_1;
                break;
            case 2:
                $member->kekkon = KEKKON_2;
                break;
            default:
                $member->kekkon = KEKKON_0;
                break;
        }
        switch ($member->ketsueki) {
            case 1:
                $member->ketsueki = KETSUEKI_1;
                break;
            case 2:
                $member->ketsueki = KETSUEKI_2;
                break;
            case 3:
                $member->ketsueki = KETSUEKI_3;
                break;
            default:
                $member->ketsueki = KETSUEKI_0;
                break;
        }
        $this->set('member', $member);
        $this->set('_serialize', ['member']);
    }

    /**
     * Add method
     *
     * @return \Cake\Http\Response|null Redirects on successful add, renders view otherwise.
     */
    public function add()
    {
        $member = $this->Members->newEntity();
        if ($this->request->is('post')) {
            $reVal = ['status' => 0];
            $dataAry = $this->request->getData();
            if(isset($dataAry['action1'])){
                unset($dataAry['action1']);
            }
            /*Begin Upload file*/
            /*Check if exist image then upload*/
            if($dataAry['image']['error'] == 0){
                $imgInfo = $dataAry['image'];
                $imgUploadedAry = $this->upload($imgInfo,640,480,'member');
                unset($dataAry['image']);
                $dataAry['image'] = isset($imgUploadedAry['imgPath']) ? $imgUploadedAry['imgPath'] : '';
            }
            /*End Upload file*/
            $member = $this->Members->patchEntity($member, $dataAry);
            if ($obj = $this->Members->save($member)) {
                $this->request->session()->write('Member.id', $obj->id);
                $reVal['status'] = 1;
                $reVal['msg'] = 'Thông tin cơ bản của ứng viên đã được tạo';
            }else{
                $reVal['status'] = 0;
                $reVal['msg'] = 'Thông tin cơ bản của ứng viên chưa đúng. Hãy kiểm tra lại';
            }
            echo json_encode($reVal);
            die;
        }
        $companys = $this->Members->Companys->find('list', ['limit' => 200]);
        $this->set(compact('member', 'companys'));
        $this->set('_serialize', ['member']);
    }

    /**
     * Edit method
     *
     * @param string|null $id Member id.
     * @return \Cake\Http\Response|null Redirects on successful edit, renders view otherwise.
     * @throws \Cake\Network\Exception\NotFoundException When record not found.
     */
    public function edit($id = null)
    {
        $member = $this->Members->get($id, [
            'contain' => []
        ]);
        if ($this->request->is(['patch', 'post', 'put'])) {
            $member = $this->Members->patchEntity($member, $this->request->getData());
            if ($this->Members->save($member)) {
                $this->Flash->success(__('The member has been saved.'));

                return $this->redirect(['action' => 'index']);
            }
            $this->Flash->error(__('The member could not be saved. Please, try again.'));
        }
        $companys = $this->Members->Companys->find('list', ['limit' => 200]);
        $this->set(compact('member', 'companys'));
        $this->set('_serialize', ['member']);
    }

    /**
     * Delete method
     *
     * @param string|null $id Member id.
     * @return \Cake\Http\Response|null Redirects to index.
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function delete($id = null)
    {
        $this->request->allowMethod(['post', 'delete']);
        $member = $this->Members->get($id);
        if ($this->Members->delete($member)) {
            $this->Flash->success(__('The member has been deleted.'));
        } else {
            $this->Flash->error(__('The member could not be deleted. Please, try again.'));
        }

        return $this->redirect(['action' => 'index']);
    }

   public function printCv()
   {
       echo date('H:i:s') , ' Create new PhpWord object';
       $phpWord = new \PhpOffice\PhpWord\PhpWord();
       $phpWord->addParagraphStyle('Heading2', array('alignment' => 'center'));
       $section = $phpWord->addSection();
       $html = '<h1>Adding element via HTML</h1>';
       $html .= '<div style="float:left" data-width="50"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>';
       $html .= '<img src = "img/profile_user.jpg" width="50" height="50"/>';
       $html .= '<p>Some well-formed HTML snippet needs to be used</p>';
       $html .= '<p>With for example <strong>some<sup>1</sup> <em>inline</em> formatting</strong><sub>1</sub></p>';
       $html .= '<p>A link to <a href="http://phpword.readthedocs.io/" style="text-decoration: underline">Read the docs</a></p>';
       $html .= '<p lang="he-IL" style="text-align: right; direction: rtl">היי, זה פסקה מימין לשמאל</p>';
       $html .= '<p style="margin-top: 240pt;">Unordered (bulleted) list:</p>';
       $html .= '<ul><li>Item 1</li><li>Item 2</li><ul><li>Item 2.1</li><li>Item 2.1</li></ul></ul>';
       $html .= '<p style="margin-top: 240pt;">1.5 line height with first line text indent:</p>';
       $html .= '<p style="text-align: justify; text-indent: 70.9pt; line-height: 150%;">Lorem ipsum dolor sit amet, <strong>consectetur adipiscing elit</strong>, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>';
       $html .= '<h2 style="align: center">centered title</h2>';
       $html .= '<p style="margin-top: 240pt;">Ordered (numbered) list:</p>';
       $html .= '<ol>
                <li><p style="font-weight: bold;">List 1 item 1</p></li>
                <li>List 1 item 2</li>
                <ol>
                    <li>sub list 1</li>
                    <li>sub list 2</li>
                </ol>
                <li>List 1 item 3</li>
            </ol>
            <p style="margin-top: 15px;">A second list, numbering should restart</p>
            <ol>
                <li>List 2 item 1</li>
                <li>List 2 item 2</li>
                <li>
                    <ol>
                        <li>sub list 1</li>
                        <li>sub list 2</li>
                    </ol>
                </li>
                <li>List 2 item 3</li>
                <ol>
                    <li>sub list 1, restarts with a</li>
                    <li>sub list 2</li>
                </ol>
            </ol>';
       $html .= '<p style="margin-top: 240pt;">List with formatted content:</p>';
       $html .= '<ul>
                <li>
                    <span style="font-family: arial,helvetica,sans-serif;">
                        <span style="font-size: 16px;">big list item1</span>
                    </span>
                </li>
                <li>
                    <span style="font-family: arial,helvetica,sans-serif;">
                        <span style="font-size: 10px; font-weight: bold;">list item2 in bold</span>
                    </span>
                </li>
            </ul>';
       $html .= '<p style="margin-top: 240pt;">A table with formatting:</p>';
       $html .= '<table align="center" style="width: 50%; border: 6px #0000FF double;">
                <thead>
                    <tr style="background-color: #FF0000; text-align: center; color: #FFFFFF; font-weight: bold; ">
                        <th style="width: 50pt">header a</th>
                        <th style="width: 50">header          b</th>
                        <th style="background-color: #FFFF00; border-width: 12px"><span style="background-color: #00FF00;">header c</span></th>
                    </tr>
                </thead>
                <tbody>
                    <tr><td style="border-style: dotted;">1</td><td colspan="2">2</td></tr>
                    <tr><td>This is <b>bold</b> text</td><td></td><td>6</td></tr>
                </tbody>
            </table>';
       $html .= '<p style="margin-top: 240pt;">Table inside another table:</p>';
       $html .= '<table align="center" style="width: 80%; border: 6px #0000FF double;">
    <tr><td>
        <table style="width: 100%; border: 4px #FF0000 dotted;">
            <tr><td>column 1</td><td>column 2</td></tr>
        </table>
    </td></tr>
    <tr><td style="text-align: center;">Cell in parent table</td></tr>
</table>';
       $html .= '<p style="margin-top: 240pt;">The text below is not visible, click on show/hide to reveil it:</p>';
       $html .= '<p style="display: none">This is hidden text</p>';
       \PhpOffice\PhpWord\Shared\Html::addHtml($section, $html, false, false);

       $objWriter = \PhpOffice\PhpWord\IOFactory::createWriter($phpWord, 'Word2007');
       $objWriter->save('helloWorld.docx');
       die('ss');
   }
}
